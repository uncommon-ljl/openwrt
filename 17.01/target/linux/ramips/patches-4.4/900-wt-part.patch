--- a/drivers/mtd/ofpart.c
+++ b/drivers/mtd/ofpart.c
@@ -20,6 +20,10 @@
 #include <linux/slab.h>
 #include <linux/mtd/partitions.h>
 
+#define WT_FIRMWARE_NAME               "firmware"
+#define WT_INFO_PART_NAME            "wtinfo"
+#define WT_OEM_PART_NAME			"woem"
+
 static bool node_has_compatible(struct device_node *pp)
 {
 	return of_get_property(pp, "compatible", NULL);
@@ -35,7 +39,9 @@
 	struct device_node *pp;
 	int nr_parts, i, ret = 0;
 	bool dedicated = true;
-
+	bool wtpart = false;
+	uint64_t wtinfo_size = 0x10000;
+	uint64_t wtoem_size = 0x10000;
 
 	if (!data)
 		return 0;
@@ -43,6 +49,8 @@
 	mtd_node = data->of_node;
 	if (!mtd_node)
 		return 0;
+
+	wtpart = of_property_read_bool(mtd_node, "enable-wtpart");
 
 	ofpart_node = of_get_child_by_name(mtd_node, "partitions");
 	if (!ofpart_node) {
@@ -115,6 +123,22 @@
 			partname = of_get_property(pp, "name", &len);
 		(*pparts)[i].name = partname;
 
+		if (wtpart) {
+			if (!strcmp(partname, WT_INFO_PART_NAME)) {
+				(*pparts)[i].offset = master->size - (*pparts)[i].size - (*pparts)[i].size;
+				wtinfo_size = (*pparts)[i].size;
+			}
+
+			if (!strcmp(partname, WT_OEM_PART_NAME)) {
+				(*pparts)[i].offset = master->size - (*pparts)[i].size;
+				wtoem_size = (*pparts)[i].size;
+			}
+
+			if (!strcmp(partname, WT_FIRMWARE_NAME)) {
+				(*pparts)[i].size = master->size - wtinfo_size - wtoem_size - (*pparts)[i].offset;
+			}
+		}
+
 		if (of_get_property(pp, "read-only", &len))
 			(*pparts)[i].mask_flags |= MTD_WRITEABLE;
 
